在返回浏览器json数据的时候，必须要 response.setContentType("application/json;charset=utf-8")设置json
使用sql查询语句的时候记得？

判断是不是相等是双等号 单等号是赋值×2

过滤要经过所有的过滤器 所有最好的是否通过过滤要写true




登录混淆
 超级管理员登录之后过滤器会默认具有登录信息 超级管理员与普通管理员就可以互相登录


 重点 在requset里面与 session里面均有getattrbute方法 但是他们的是不一样的 存放的不能共享


 sql语句更新是update

 更新地点与时间语句的时候 可以使用面向对象的方法 创建用户的对象进行创建 但是现在的使用的是调用方法otheraction方法来进行创建 因为我绝对这样会对性能进行一定的节约
 但是确定是 使用了大量的时间来写语句 不如写通用的方法有用 而且直接使用创建对象的方式进行的话 会出现null的赋值的情况，其实两种更新的方法都会导致大量的创建方法

 百度的ip接口每天的限额是1000次，超过1000次会导致ip地址的获取失败

返回json的时候 还是要设置编码 不然会导致异常的 即使使用了过滤器 也不可以进行屏蔽 不然你tmd死都不知道怎么死的

超管与铺管互通但是会导致串


傻逼！！！！！！ 表单提交的是name 不是id

baseservlet的时候是后面的路径必须小写 咱也不知道为啥

resp.getWriter().write("<script>alert('添加信息异常') </script>"); 访问这个页面的时候会弹窗 但是 因为只是服务发送ajax请求到这个服务 但是没有进行跳转
所有不可以

更新用户的时候是使用了多参数一起传的更新 更新的使用一定不要新建对象 不然会导致全部更新为空，虽然这样肯会损耗服务器的性能 但是这个方法 可以两个修改一起写了 毕竟我懒

不要使用 $(function () {} 页面可以并没有加载成功 傻逼错误搞了半个小时  不对  不加载的原因是因为有前端页面有bug 应该打开浏览器控制台查看错误

使用baseServlet的代理方法的调用的时候 不能进行路径的转发 会导致 找不到该方法 所以只可以使用ajax请求 使重定向会导致保存着在request域里面的对象不能被转发，
存入session的话 会导致内存的占用过多 oh shit！！！


退出登录 直接自自爆所有session就可以 无需数据库的操作

发送ajax请求直接把参数传过去就OK了

 html页面出现问题记得看浏览器控制台的输出


@WebServlet("/file/*") 这里必须要加一个/不然就会报错

访问的时候注意路径


文件存储的过程中 会出现存入的会议的id会莫民奇妙消失 原因是因为重启服务器之后seesion域里面存放的消失不见 才导致id消失 只要保证服务器重启就好
部署之后不会出现这样的问题 因为重启服务器之后的域对象的消失 导致登录的session也消失 会触发重新登录的逻辑

需要解决的问题 铺管与超管不能具有相同的名字

在新增用户照片的时候 违反了mvc的原则 没有使用jsp里面来获取了请求的id参数 如果不这样的话没有办法来想办法获取是給哪一个会议添加的照片

不要想当然，不要钻牛角尖 要考虑到所有的测试范围

文件上传的时候要考虑到文件保存在数据库里面的大小
（org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [insert into meetinguers(mid,photo_name,person_name) value(?,?,?) ]; Data truncation: Data too long for column 'person_name' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'person_name' at row 1）

在写jsp页面中写代码的时候 定义的越早越好

代码的检查不仅仅要考虑后台界面的问题 还有找到前台界面的问题


sout 排错的时候 最好加上数据的名称 写的时候麻烦 但是排错的时候简单

 数据库自动更新 设置字段类型为:timestamp 默认值设置为current_timestamp(),


multipart/form-data 是分散的数据 不是键值对数据

网络参数的获取是如果没有填写的话返回的是null



peopele_list通过jsp的代码获取的 但是存储的session里面会导致如果多页面同时进行请求 后来的页面的id会将前面的id的参数给覆盖 导致
前一个页面的数据的提交为后一个页面的页面的数据 最新的方法是使用js里面的动态的获取id的参数进行表单的提交
 否定 发送ajax请求的时候url的发送必须是携带id的参数的 新解决方案 获取的id不是存放在session与里面 而是直接使用request请求
可以解决 但是转发回来会发现没有在session域里面没有改id参数 修改转发的路径会回退到上一个页面 返回页面不会刷新时数据 需要在页面上面
添加一次刷新  window.location.href=document.referrer 退回上一级并刷新

 js修改value的值的方法是val() 不是value



注意事项  请不要再同一浏览器里面同时打开多个人员管理添加界面的人员管理添加 会导致获取的id异常导致 导致之前打开的页面的id转为了之后打开的id（已解决）

判断调用腾讯api要先判断是不是存储的腾讯的信息 有问题  如果先判断数据的存入的话 显示添加成功 但是数据库的数据会添加成功 会返回在列表之间 但是实际上
是没有添加成功的

腾讯api调用的时候没有返回腾讯的的错误信息 而是直接返回用户添加失败 ，后期 可以将腾讯云的错误信息 打印日志


关于uiid的重复
重复是肯定会重复的，32位的UUID，经过16^32+1次生成后，必然会产生至少一次重复，16^32=……没算错的话有39位数啊
SO，如果你认为纯粹靠运气连续100年每天中一次500W的事情是“绝对”不可能出现的话（这个概率比UUID重复来的还要容易些），
UUID就是“绝对”不可能重复的。


 BeanUtils.populate(mt, parameterMap) 网页传输过来的是string类型 ，解决赋值给int的数据库的类型 要做的是 将string的类型转换为int类型
 这个类型的转换要在要在封装之后进行 不然会导致封装数据的失效

 NumberFormatException: For input string: "15421021554" 数据的转换出现问题 不能通过input进行转换
 解决方法 将数据库里面的字段类型转化为string 这样就可以封装了吧

腾讯云返回的是结构是 repose{里面包含数据}


//腾讯云不不能存入.号 所有需要替换。 现在需要的解决方法是 替换掉photo name的后缀去掉



腾讯云提供的方法是直接将json对象进行tosting化 所有直接调用返回值是不正确的

腾讯云的api已经帮您解析了所有的数据你要得到的所有数据都可帮你获取 不用花心思进行解析

获取返回的腾讯云接口的参数的时候 可以选择创建一个对象 来存放信息

接触新技术不要自以为是 返回的语句需要自己打印测试

错误的地方随时存在 要学会debug找错

faceTest.jsp 页面提交的数据并不是通过input来提交的是通过butto的点击事件进行提交的 所以应该将参数获取并通过ajax与image一起发送


腾讯返回的api数据数组数据真牛逼,想获取直接就能得到遍历数组get


服务器的参数传递的防止异常 要防止的不仅仅是null 还有空字符串


jquery 的点击事件是click 不是onclick


别在一个小细节上浪费时间


OtherActionService.uodata方法的更新只包括id列，下次使用记得将id

加载数据集的设置为异步请请求

前端的判断的时候也要学会防止空指针异常

直接读取properties文件会导致中文乱码 可以使用inputstream指定编码方式,本项目里面的properties使用的是gbk


java 的字符串的比较要使用equels不能使用==


获取的参数的时候如果是已经指定姓名之后 那么获取的参数即使是没有输入 也是空字符串而不是null


短信的通知只会通知未签到的人

多次发送短信的时候会导致调用的缓慢 可以直接调用短信的多发的接口 但是这样就无法来获取用户的名字的参数了 因为这个参数不是一个可变的参数


严重bug 寻找会议不是根据会议不是根据id查询的


日志不可删除


java的字符串的比较 后面的可以为空字符串



优化
1 添加人数的时候 一次多选的添加人物 选择zip文件 或者多选框输入文件
2 sun.misc.BASE64Decoder是内部专用 API, 可能会在未来发行版中删除 64位的编码转换需要更换 部署到服务器可以通过url传给腾讯云 本地的base64编码转换很慢
使用commons.codec代替编码（解决）
3 uuid的校验 如果在同一台机器上生成uuid的相同值是不太可能实现的 但是在集群上可能会出现问题（繁琐无效，此项目的并发少 不存在集群）
4 通用腾讯云的类代码臃肿 可以使用动态代理修改（使用动态代理无法解决）
5 添加会议实现同步保存人员库 问题在于不能够通过正常的参数的获取表单的内容（理论可以解决 但是这个遍历太过于麻烦）
6 退出的时候是清除所有的session 如果超管与铺管同时登陆 会造成两个账号的同时退出 根据  （解决）
7 根据cookie来实现免密自动登录 可以通过 referer来判断是属于超管的退出登录 或者是铺管的退出登录 （解决）
8 修改登录用户的头像
9 使用qq微信互联实现绑定登录（但是需要审核）
10 base64传输的时候有时候会导致编码解码失败（解决）
11 人脸搜索的时候不能返回人脸数 应该根据识别的相似度判断;相似度为80%    解决
12 获取参数的时候根据缺少的参数来返回信息   解决
13 签到管理页面去掉了直观的签到人数的比例 因为在此页面查询会很麻烦 但会造成用户不能直观的看见签到的比例
14 分页条数的添加，使可以修改分页查询的每页显示的条数
15 删除选中的时候 根据返回值的删除的时候 现在返回的是如果删除成功任意一条 就是显示删除成功 可以优化
16 删除的时候应该配套的删除腾讯的人员库
17 多选框点击全选      解决方法 jQuery异步请求换同步（取消）
18 数据库的联级删除
19 腾讯的密匙与密码最好提取出来（完成）
20 模糊搜索的添加（人员的管理的时候的使用  其他的未加）
21 日志的操作只考虑了操作成功的数据
22 表单提交输入参数的校验（完成一部分）
23 添加会议搜索的界面（取消 太麻烦）
24 单点登录
25 短信接口防多次调用 （完成）
26 非法调用接口的记录 （使用网站的全路径 防止其他网站含有regeist.jsp的调用）
27 修改人脸识别的准度（设置90）
28 单次的md5加密会导致cookie的泄漏,解决方法 让用户输入复杂的密码，防止md5的碰撞解密
29 超管退出删除免登陆（完成）
30 删除人员（完成）
31 手机号的非法的绑定
32 严重bug 寻找会议不是根据会议不是根据id查询的 （完成）
33 超管日志不是根据超管的查询的（完成）
34 修改 普通管理员的信息 超级管理员的信息 （数据库的操作接口已经实现）
35 超管的修改密码等未实现（完成）
36 手机端的页面的适配
37 文件上传的丢失 问题根源（打包之后的文件是在war包的目录里面的） （解决 服务器的war包不会导致问题）
38 非常非常验证的bug json接口的暴露    （解决方法 所有的查询都需要增加当前用户条件查询的约束）（修改完成）
39 人脸识别的线程安全问题(解决)
40 注册的的短信接口不应该被过滤（解决）
41 如果删除会议的时候不将人员库联集删除 会导致phoid异常
42 添加会议的时候的电话号码长度的校验（解决）
43 当运行的过程中服务器停止 那么将会导致数据库的cookie不被删除
44  如果用户在其他地方登陆 那么就会更新cookie 导致以前的cookie免登陆失效(正常)
45 重名问题




腾讯云的接口文件与数据库的相关

创建人员库人员库的必须参数 groupname 与 人员库id 相同 对应着数据库meeting表的生成uuid

创建人脸 待加入的为通过meeting_user表对应的uid来来获取  personnane 属于人的名称因为这个可以修改 人员id对应这个输出的name的去掉后缀名

